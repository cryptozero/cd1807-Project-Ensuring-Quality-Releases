{
	"info": {
		"_postman_id": "8a32c7ec-ff84-46c6-8160-2ab26584dc27",
		"name": "Testsuite.Validation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful response\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"success\");",
							"});",
							"",
							"pm.test(\"Create employee id is a number\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.id).to.be.a('number')",
							"});",
							"",
							"pm.test(\"Employee creation validation data\", function () {",
							"",
							"    name = pm.environment.get(\"name\");",
							"    salary = pm.environment.get(\"salary\");",
							"    age = pm.environment.get(\"age\");",
							"",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.name).to.eql(name);",
							"    pm.expect(jsonData.data.salary).to.eql(salary);",
							"    pm.expect(jsonData.data.age).to.eql(age);",
							"});",
							"",
							"var json = pm.response.json();",
							"pm.environment.set(\"id\", json.data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{name}}\",\n    \"salary\": \"{{salary}}\",\n    \"age\": \"{{age}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/create",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Employees",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful response\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"success\");",
							"});",
							"",
							"const schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"status\": { \"type\": \"string\" },",
							"        \"data\": {",
							"            \"type\": \"array\",",
							"            \"properties\": {",
							"                \"id\": { \"type\": \"number\"},",
							"                \"employee_name\": { \"type\": \"string\" },",
							"                \"employee_salary\": { \"type\": \"number\"},",
							"                \"employee_age\": { \"type\": \"number\"},",
							"                \"profile_image\": { \"type\": \"string\"},",
							"        },",
							"        \"required\": [\"id\", \"employee_name\", \"employee_salary\", \"employee_age\"],",
							"        \"message\": {\"type\": \"string\"}",
							"        },",
							"    },",
							"    \"required\": [\"message\", \"status\", \"data\"]",
							"};",
							"",
							"pm.test(\"Validate schema\", () => {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/employees",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employees"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful response\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"success\");",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"Successfully! Record has been fetched.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/employee/{{id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful response\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"success\");",
							"});",
							"",
							"pm.test(\"Employee update validation data\", function () {",
							"",
							"    name = pm.environment.get(\"name\");",
							"    salary = pm.environment.get(\"salary\");",
							"    age = pm.environment.get(\"age\");",
							"",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.name).to.eql(name);",
							"    pm.expect(jsonData.data.salary).to.eql(salary);",
							"    pm.expect(jsonData.data.age).to.eql(age);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/update/{{id}}?name={{name}}&salary={{salary}}&age={{age}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"update",
						"{{id}}"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful response\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"success\");",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"Successfully! Record has been deleted\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/delete/{{id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"delete",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}